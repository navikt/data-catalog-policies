CREATE SCHEMA IF NOT EXISTS BACKEND_SCHEMA;

CREATE SCHEMA IF NOT EXISTS POLICY_SCHEMA;

CREATE SEQUENCE IF NOT EXISTS SEQ_POLICY;

CREATE TABLE IF NOT EXISTS BACKEND_SCHEMA.INFORMATION_TYPE (
    INFORMATION_TYPE_ID INTEGER NOT NULL PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL CONSTRAINT UK_INFORATION_TYPE UNIQUE,
    DESCRIPTION TEXT,
    CREATED_BY VARCHAR(200) NOT NULL,
    CREATED_DATE TIMESTAMP NOT NULL,
    LAST_MODIFIED_BY VARCHAR(200),
    LAST_MODIFIED_DATE TIMESTAMP
);

CREATE SEQUENCE IF NOT EXISTS BACKEND_SCHEMA.SEQ_CODELIST;

CREATE TABLE IF NOT EXISTS BACKEND_SCHEMA.CODELIST
(
    LIST_NAME           VARCHAR(100) NOT NULL,
    CODE                VARCHAR(100) NOT NULL,
    DESCRIPTION         VARCHAR(500) NOT NULL,
    CREATED_BY          VARCHAR(200) NOT NULL,
    CREATED_DATE        TIMESTAMP NOT NULL,
    LAST_MODIFIED_BY    VARCHAR(200),
    LAST_MODIFIED_DATE  TIMESTAMP,
    UNIQUE (LIST_NAME, CODE)
);

CREATE TABLE IF NOT EXISTS POLICY (
    POLICY_ID INTEGER DEFAULT NEXTVAL('SEQ_POLICY') PRIMARY KEY,
    INFORMATION_TYPE_ID INTEGER NOT NULL,
    PURPOSE_CODE VARCHAR(100) NOT NULL,
    LEGAL_BASIS_DESCRIPTION TEXT,
    CREATED_BY VARCHAR(200) NOT NULL,
    CREATED_DATE TIMESTAMP NOT NULL,
    LAST_MODIFIED_BY VARCHAR(200),
    LAST_MODIFIED_DATE TIMESTAMP,
    CONSTRAINT FK_POLICY_INFORMATION_TYPE FOREIGN KEY (INFORMATION_TYPE_ID)
        REFERENCES BACKEND_SCHEMA.INFORMATION_TYPE (INFORMATION_TYPE_ID));

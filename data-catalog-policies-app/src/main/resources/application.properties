# App config
server.port=8080
server.servlet.context-path=/policies

# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

spring.datasource.url=${POSTGRES_URL:jdbc:postgresql://localhost:5432/postgres}
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.maximum-pool-size=2
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=none

vault.enable=true
vault.database-backend=postgresql/${ENVIRONMENT_CLASS}-fss
vault.database-role=datacatalog-user
vault.database-adminrole=datacatalog-admin

# Flyway
spring.flyway.schemas=public
spring.flyway.table=flyway_policy_history
spring.flyway.baseline-on-migrate=true

# Kafka
policies.fss.user=${SRV_DATA_CATALOG_POLICIES_FSS_USER:kafkauser}
policies.fss.pwd=${SRV_DATA_CATALOG_POLICIES_FSS_PWD:kafkapwd}
kafka.topics.behandlingsgrunnlag=aapen-behandlingsgrunnlag-v1
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.acks=all
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.properties.schema.registry.url=${KAFKA_SCHEMA_REGISTRY_URL:http://localhost:8082}
spring.kafka.properties.specific.avro.reader=true
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${policies.fss.user}" password="${policies.fss.pwd}";
spring.kafka.properties.ssl.truststore.location=${javax.net.ssl.trustStore}
spring.kafka.properties.ssl.truststore.password=${javax.net.ssl.trustStorePassword}
spring.kafka.properties.client-id=data-catalog-policies

behandlingsgrunnlag.distribute.rate.seconds=60

# Endpoints
datacatalog.codelist.url=${CODELIST_URL:http://localhost:8081/backend/codelist}
datacatalog.dataset.url=${DATASET_URL:http://localhost:8081/backend/dataset}

nais.elector.path=${ELECTOR_PATH:localhost:8080/elector}

management.endpoints.web.base-path=/internal
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.web.path-mapping.prometheus=metrics
management.endpoint.health.show-details=always
management.endpoint.security.enabled=false
management.endpoint.metrics.enabled=false
management.endpoint.prometheus.enabled=true
management.info.git.mode=simple

azure.activedirectory.tenant-id=${AZURE_TENANT_ID:tenant-id}
azure.activedirectory.client-id=${AZURE_CLIENT_ID:client-id}
azure.activedirectory.client-secret=${AZURE_CLIENT_SECRET:client-secret}
azure.activedirectory.active-directory-groups=${AZURE_CLIENT_GROUPS:teamdatajegerne}
azure.activedirectory.app-id-uri=${AZURE_APP_ID_URI:https://nav.no/datacatalogauth}
azure.activedirectory.allow-telemetry=false
azure.activedirectory.session-stateless=true

nav.proxy-host: webproxy-nais.nav.no
nav.proxy-port: 8088

kafka.rest.schema-registry-url=${KAFKA_REST_SCHEMA_REGISTRY_URL:http://localhost:8085}

springfox.documentation.swagger.v2.path=/swagger-docs

logging.level.no.nav.data.catalog.policies=DEBUG